################################################################################
##                  Meter
################################################
utility_meter:
  meter_termostato_anno:
    source: sensor.durata_riscaldamento_generale
    cycle: yearly
  meter_termostato_mese:
    source: sensor.durata_riscaldamento_generale
    cycle: monthly
  meter_termostato_oggi:
    source: sensor.durata_riscaldamento_generale
    cycle: daily

################################################################################
##                  input_boolean
################################################
input_boolean:
  avvisi_generale_ricircolo_aria:
    name: Avvisi Ricircola aria
    icon: mdi:volume-source
  riscaldamento_modo_ospiti:
    name: Modalità ospiti
    icon: mdi:account-group

################################################################################
##                  Timer
###################################################
timer:
  riscaldamento_modo_ospiti:
    duration: "00:30:00"


template:
################################################################################
##                  Sensor
################################################
  - binary_sensor:
      - name: "Riscaldamento Generale"
        state: >
          {{ ((states.climate)
              | selectattr('entity_id','search','valvola')
              | selectattr('attributes.hvac_action', 'eq', 'heating')
              | rejectattr('entity_id','search','homekit')
              | map(attribute='entity_id')
              | list
              | count > 0)
          }}

  - sensor:
      - name: "Durata riscaldamento generale"
        unique_id: durata_riscaldamento_generale
        state: >-
          {%if is_state('binary_sensor.riscaldamento_generale', 'on') and (as_timestamp(states.binary_sensor.riscaldamento_generale.last_changed)) <= as_timestamp(now())%}
            {{((as_timestamp(now()) - as_timestamp(states.binary_sensor.riscaldamento_generale.last_changed))/3600) }}
          {% else %}
            0
          {% endif %}
        attributes:
          Oggi: >
            {% from 'history_stats.jinja' import history %}
            {{ history(states('sensor.meter_termostato_oggi')) }}
          Mese: >-
            {% from 'history_stats.jinja' import history %}
            {{ history(states('sensor.meter_termostato_mese')) }}
          Anno: >-
            {% from 'history_stats.jinja' import history %}
            {{ history(states('sensor.meter_termostato_anno')) }}


      - name: "Numero Valvole Accese"
        unique_id: numero_valvole_accese
        state: >-
          {{ ((states.climate)
            | selectattr('entity_id','search','valvola')
            | selectattr('attributes.hvac_action', 'eq', 'heating')
            | rejectattr('entity_id','search','homekit')
            | map(attribute='entity_id')
            | list
            | count ) }}

################################################################################
##                  Script
###################################################
script:
  temperatura_up:
    sequence:
    - service: climate.set_temperature
      data:
        temperature: >
          {{ state_attr(climate_id, 'temperature') + 0.5 | float }}
      target:
        entity_id: "{{ climate_id }}"

  temperatura_down:
    sequence:
      - service: climate.set_temperature
        data:
          temperature: >
            {{ state_attr(climate_id, 'temperature') - 0.5 | float }}
        target:
          entity_id: "{{ climate_id }}"

  away:
    sequence:
      - service: climate.set_preset_mode
        data:
          preset_mode: "away"
        target:
          entity_id: >
            {{(states.climate)
              | selectattr('entity_id','search','valvola')
              | rejectattr('entity_id','search','homekit')
              | map(attribute='entity_id')
              | list
              | first }}

  preset_mode:
    sequence:
      - service: climate.set_preset_mode
        data:
          preset_mode: "home"
        target:
          entity_id: >
            {{(states.climate)
              | selectattr('entity_id','search','valvola')
              | rejectattr('entity_id','search','homekit')
              | map(attribute='entity_id')
              | list
              | first }}

  power_off_valvole:
    sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: "off"
        target:
          entity_id: >-
            {{ (states.climate)
                | selectattr('entity_id','search','valvola')
                | selectattr('entity_id','search','homekit')
                | map(attribute='entity_id')
                | list }}


  riscaldamento_modo_ospiti:
    sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.riscaldamento_modo_ospiti

      - service: climate.set_temperature
        data:
          temperature: 20.5
          hvac_mode: auto
        target:
          entity_id:
            - climate.valvola_soggiorno
            - climate.valvola_cucina
      - service: climate.set_temperature
        data:
          temperature: 19.5
          hvac_mode: auto
        target:
          entity_id:
            - climate.valvola_cameretta

      - service: timer.cancel
        target:
          entity_id: timer.riscaldamento_modo_ospiti
      - service: timer.start
        target:
          entity_id: timer.riscaldamento_modo_ospiti


  riscaldamento_modo_ospiti_off:
    sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.riscaldamento_modo_ospiti
      - service: timer.cancel
        target:
          entity_id: timer.riscaldamento_modo_ospiti
      - service: climate.set_hvac_mode
        data:
          hvac_mode: auto
        target:
          entity_id:
            - climate.valvola_soggiorno
            - climate.valvola_cameretta
            - climate.valvola_cucina

###############################################################################
#                  AUTOMATION
###################################################
automation:
  - alias: "Riscaldamento modalità ospiti"
    id: "riscaldamento_modo_ospiti"
    trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.riscaldamento_modo_ospiti
    action:
      - choose:
          - conditions:
              - alias: "Se è prima di notte"
                condition: time
                before: '00:30:00'
              - condition: state
                entity_id: input_boolean.riscaldamento_modo_ospiti
                state: "on"
            sequence:
              - service: script.turn_on
                target:
                  entity_id: script.riscaldamento_modo_ospiti

        default:
          - service: timer.cancel
            target:
              entity_id: timer.riscaldamento_modo_ospiti

          - service: climate.set_hvac_mode
            data:
              hvac_mode: auto
            target:
              entity_id:
                - climate.valvola_soggiorno
                - climate.valvola_cucina
          - service: input_boolean.turn_off
            target:
              - input_boolean.riscaldamento_modo_ospiti
